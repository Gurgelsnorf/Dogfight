#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 61 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 90 -1 -1 93 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 128 192 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 128 192 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 255 255 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 90 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 128 255 0 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 128 255 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 0 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 128 64 0 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 128 64 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 128 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 5133 0 32 3 12 #"#lang racket"
0 0 32 3 1 #"/"
0 0 32 3 1 #"g"
0 0 32 3 2 #"ui"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 22 #"\"basic-procedures.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 21 #"\"graphics-engine.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 15 #"\"rectangle.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 12 #"\"circle.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 14 #"\"airplane.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 16 #"\"projectile.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 10 #"\"buff.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 19 #"\"flying-entity.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 16 #"\"world-init.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 7 #"require"
0 0 28 3 1 #" "
0 0 20 3 21 #"\"player-commands.rkt\""
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 14 3 7 #"provide"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 15 #"all-defined-out"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 65
#"#| This file contains all procedures needed to detect collisions."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 66
#"The file is quite big, and is thus divided into multiple sections."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 32 #";_______________________________"
0 0 18 3 18 #"__________________"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"Section Cheat Sheet:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"     1. Help procedures for single unit collisions"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"     2. Single unit collisions"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 23 #"     3. World Collision"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 52 #"     4. Help procedures for multiple unit collisions"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"     5. Main Collision Finder"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"     6. Main Collision Handler"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 18 29 1 #"\n"
0 0 18 3 20 #"Segment description:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 26 #";The 2 first segments are:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"     *Help procedures for single unit collisions"
0 0 18 29 1 #"\n"
0 0 18 3 28 #"     *Single unit collisions"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"Which contains all procedures needed for detec"
0 0 18 3 4 #"ting"
0 0 18 29 1 #"\n"
0 0 18 3 54 #"if 2 given objects are currently colliding, and mostly"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"consists of different geometric calculations."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";-------------------------------------------------"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"This is followed by the segment:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 21 #"     *World Collision"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"That contains all procedures needed to check if"
0 0 18 29 1 #"\n"
0 0 18 3 38 #"an object has collided with the world."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";-------------------------------------------------"
0 0 18 29 1 #"\n"
0 0 18 3 18 #"Next, the segment:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"     *Help procedures for multiple unit collisions"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 52 #"Is defined, which containts all procedures that help"
0 0 18 29 1 #"\n"
0 0 18 3 15 #"find and handle"
0 0 18 3 26 #" all collisions in *world*"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";-------------------------------------------------"
0 0 18 29 1 #"\n"
0 0 18 3 41 #"Lastly, the 2 final segments are defined:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"     *Main Collision Finder"
0 0 18 29 1 #"\n"
0 0 18 3 28 #"     *Main Collision Handler"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 61
#"The first which, when run, returns all collisions in *world*."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 58
#"The second includes the main procedure ($Collisions), that"
0 0 18 29 1 #"\n"
0 0 18 3 57 #"finds all collisions, and takes the corresponding actions"
0 0 18 29 1 #"\n"
0 0 18 3 60
#"for every type of collision. This is the procedure that will"
0 0 18 29 1 #"\n"
0 0 18 3 51 #"be called by the main loop in physics-engine later."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";---------Defining rectangles for testing---------"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 2 #"#|"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"(define *re1* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                   [name 're1]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [bl_corner ($Vector 2 2)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [br_corner ($Vector 6 2)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [tl_corner ($Vector 2 6)]"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"                   [tr_corner ($Vector 6 6)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"(define *re2*"
0 0 18 3 16 #" (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                   [name 're2]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [bl_corner ($Vector 1 1)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [br_corner ($Vector 3 1)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [tl_corner ($Vector 1 3)]"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"                   [tr_corner ($Vector 3 3)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"(define *re3* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                   [name 're3]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [bl_corner ($Vector 1 7)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [br_corner ($Vector 2 7)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [tl_corner ($Vector 1 9)]"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"                   [tr_corner ($Vector 2 9)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 24 #"(define *re4* (new recta"
0 0 18 3 5 #"ngle%"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                   [name 're4]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                   [bl_corner ($Vector 10 2)]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                   [br_corner ($Vector 11 2)]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                   [tl_corner ($Vector 10 3)]"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"                   [tr_corner ($Vector 11 3)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"(define *re5* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                   [name 're5]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [bl_corner ($Vector 5 1)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [br_corner ($Vector 8 1)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [tl_corner ($Vector 5 7)]"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"                   [tr_corner ($Vector 8 7)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"(define *re6* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                   [name 're6]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [bl_corner ($Vector 6 2)]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                   [br_corner ($Vector 12 2)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [tl_corner ($Vector 6 4)]"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"                   [tr_corner ($Vector 12 4)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"(define *re7* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                   [name 're7]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [bl_corner ($Vector 5 5)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [br_corner ($Vector 6 5)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [tl_corner ($Vector 5 6)]"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"                   [tr_corner ($Vector 6 6)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"(define *re8* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 7 #"       "
0 0 18 3 23 #"            [name 're8]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [bl_corner ($Vector 7 7)]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                   [br_corner ($Vector 12 7)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [tl_corner ($Vector 7 9)]"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"                   [tr_corner ($Vector 12 9)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"(define *re9* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"                   [name 're9]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [bl_corner ($Vector 3 5)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [br_corner ($Vector 7 7)]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                   [tl_corner ($Vector 2 7)]"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"                   [tr_corner ($Vector 6 9)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"(define *re10* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"              "
0 0 18 3 18 #"      [name 're10]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                    [bl_corner ($Vector 7 7)]"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"                    [br_corner ($Vector 10 8.5)]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                    [tl_corner ($Vector 6 9)]"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"                    [tr_corner ($Vector 9 10.5)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 30 #"(define *re11* (new rectangle%"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"                    [name 're11]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                    [bl_corner ($Vector 5 1)]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                    [br_corner ($Vector 6 2)]"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"                    [tl_corner ($Vector 4 2)]"
0 0 18 29 1 #"\n"
0 0 18 3 47 #"                    [tr_corner ($Vector 5 3)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 34 #";_________________________________"
0 0 18 3 16 #"________________"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";-----------Defining circles for testing----------"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 18 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 18 29 1 #"\n"
0 0 18 3 13 #";test circles"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"(define *ci1*"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"  (new circle%"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       [radius 1]"
0 0 18 29 1 #"\n"
0 0 18 3 42 #"       [center_of_gravity ($Vector 0 0)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"(define *ci2*"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"  (new circle%"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       [radius 2]"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"       [center"
0 0 18 3 28 #"_of_gravity ($Vector 2 3)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"(define *ci3*"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"  (new circle%"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       [radius 1]"
0 0 18 29 1 #"\n"
0 0 18 3 42 #"       [center_of_gravity ($Vector 1 1)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"(define *ci4*"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"  (new circle%"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       [radius 3]"
0 0 18 29 1 #"\n"
0 0 18 3 43 #"       [center_of_gravity ($Vector 0 -4)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"(define *ci5*"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"  (new circle%"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       [radius 2]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"       [center_of_gravity ($Vector -5 -4)]))"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 13 #"(define *ci6*"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"  (new circle%"
0 0 18 29 1 #"\n"
0 0 18 3 17 #"       [radius 1]"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"       [center_of_gravity ($Vector -5 -4)]))"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";----Help procedures for single unit collisions---"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 51 #";Takes a rectangle and returns 2 axes perpendicular"
0 0 28 29 1 #"\n"
0 0 18 3 24 #";to its sides as a pair."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 24 #"$Find_Perpendicular_Axes"
0 0 28 3 1 #" "
0 0 14 3 16 #"rectangle_object"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 18 3 51 #";Retrieving the necessary corners to make the axes."
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 11 #"tr_corner_x"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"rectangle_object"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tr_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"["
0 0 14 3 11 #"tr_corner_y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"rectangle_object"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tr_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"["
0 0 14 3 11 #"tl_corner_x"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"rectangle_object"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tl_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"["
0 0 14 3 11 #"tl_corner_y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"rectangle_object"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tl_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"["
0 0 14 3 11 #"br_corner_x"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"rectangle_object"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Br_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"["
0 0 14 3 11 #"br_corner_y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"rectangle_object"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Br_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 75
(
 #";goes from the left side to the right,(parallel to the top and botto"
 #"m side)"
) 0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"["
0 0 14 3 7 #"axis_lr"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 7 #"$Vector"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 11 #"tr_corner_x"
0 0 28 3 1 #" "
0 0 14 3 11 #"tl_corner_x"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 11 #"tr_corner_y"
0 0 28 3 1 #" "
0 0 14 3 11 #"tl_corner_y"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 71
(
 #";goes from the bottom to the top,(parallel to the left and right sid"
 #"e) "
) 0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"["
0 0 14 3 7 #"axis_bt"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 7 #"$Vector"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 11 #"tr_corner_x"
0 0 28 3 1 #" "
0 0 14 3 11 #"br_corner_x"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 11 #"tr_corner_y"
0 0 28 3 1 #" "
0 0 14 3 11 #"br_corner_y"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 19 #";returned as a pair"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 2 #"  "
0 0 14 3 7 #"axis_lr"
0 0 28 3 2 #"  "
0 0 14 3 7 #"axis_bt"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 73
(
 #";Takes an axis, some projections on that axis, then takes the dot pr"
 #"oduct"
) 0 0 28 29 1 #"\n"
0 0 18 3 63
#";between the projections and the axis. The max and min of these"
0 0 28 29 1 #"\n"
0 0 18 3 65
#";values are then returned as a pair. (cons min_scalar max_scalar)"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 31 #"$Find_Max_Min_Projection_Scalar"
0 0 28 3 1 #" "
0 0 14 3 4 #"axis"
0 0 28 3 1 #" "
0 0 32 3 1 #"."
0 0 28 3 1 #" "
0 0 14 3 11 #"projections"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 15 #"list_of_scalars"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 4 #"sort"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 6 #"vector"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 17 #"                 "
0 0 28 3 1 #"("
0 0 14 3 19 #"$Vector_Dot_Product"
0 0 28 3 1 #" "
0 0 14 3 4 #"axis"
0 0 28 3 1 #" "
0 0 14 3 6 #"vector"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 14 3 11 #"projections"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 14 3 1 #"<"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 10 #"min_scalar"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 15 #"list_of_scalars"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"["
0 0 14 3 10 #"max_scalar"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Last_Element_List"
0 0 28 3 1 #" "
0 0 14 3 15 #"list_of_scalars"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 20 #";Returned as a pair."
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 10 #"min_scalar"
0 0 28 3 1 #" "
0 0 14 3 10 #"max_scalar"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 69
(
 #";Takes an axis and two rectangles and returns #t if their projection"
 #"s"
) 0 0 28 29 1 #"\n"
0 0 18 3 31 #";overlap on that axis, else #f."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Projection_Overlap?"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 4 #"axis"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 14 #"main_rectangle"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 16 #"second_rectangle"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 31 #";Projections on the given axis."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 45 #";Since the given axis should be perpendicular"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 49 #";to the first(main) rectangle, only 2 projections"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 55 #";are needed since they result in the same axis anyways."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 49 #";You however need all 4 for the second rectnagle."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 11 #"proj_main_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Vector_Projection"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 14 #"main_rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tr_Corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 14 3 4 #"axis"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 11 #"proj_main_2"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Vector_Projection"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 14 #"main_rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Bl_Corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 14 3 4 #"axis"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"proj_second_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Vector_Projection"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"second_rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tr_Corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 14 3 4 #"axis"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"proj_second_2"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Vector_Projection"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"second_rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tl_Corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 14 3 4 #"axis"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"proj_second_3"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Vector_Projection"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"second_rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Br_Corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 14 3 4 #"axis"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"proj_second_4"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Vector_Projection"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 16 #"second_rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Bl_Corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 25 #"                         "
0 0 14 3 4 #"axis"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 50 #";The scalar comparision-values are defined for the"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 16 #";First rectangle"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 16 #"min_max_scalar_a"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 31 #"$Find_Max_Min_Projection_Scalar"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 4 #"axis"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 11 #"proj_main_1"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 11 #"proj_main_2"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 25 #";Same for the second one."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 16 #"min_max_scalar_b"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 31 #"$Find_Max_Min_Projection_Scalar"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 4 #"axis"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 13 #"proj_second_1"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 13 #"proj_second_2"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 13 #"proj_second_3"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 14 3 13 #"proj_second_4"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 46 #";Finally, the min and max values are separated"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 12 #"min_scalar_a"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 16 #"min_max_scalar_a"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 12 #"max_scalar_a"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 16 #"min_max_scalar_a"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 12 #"min_scalar_b"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 16 #"min_max_scalar_b"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 12 #"max_scalar_b"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 16 #"min_max_scalar_b"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 34 #";If this is true, their projection"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 27 #";overlap on the given axis."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 3 #"and"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 12 #"min_scalar_b"
0 0 28 3 1 #" "
0 0 14 3 12 #"max_scalar_a"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 12 #"min_scalar_a"
0 0 28 3 1 #" "
0 0 14 3 12 #"max_scalar_b"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 52 #";Takes a point and 3 specific corners of a rectangle"
0 0 28 29 1 #"\n"
0 0 18 3 52 #";and returns if the point is inside the area limited"
0 0 28 29 1 #"\n"
0 0 18 3 25 #";by the rectangles edges."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Point_In_Rectangle?"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 5 #"point"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 9 #"br_corner"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 9 #"bl_corner"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 9 #"tr_corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 18 3 31 #";Necessary vectors are defined."
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 11 #"vector_br_p"
0 0 28 3 1 #" "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Create"
0 0 28 3 1 #" "
0 0 14 3 9 #"br_corner"
0 0 28 3 1 #" "
0 0 14 3 5 #"point"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 12 #"vector_br_bl"
0 0 28 3 1 #" "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Create"
0 0 28 3 1 #" "
0 0 14 3 9 #"br_corner"
0 0 28 3 1 #" "
0 0 14 3 9 #"bl_corner"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 12 #"vector_br_tr"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Create"
0 0 28 3 1 #" "
0 0 14 3 9 #"br_corner"
0 0 28 3 1 #" "
0 0 14 3 9 #"tr_corner"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 45 #";used to compare the angles in the rectangle."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 18 #"comparison_value_1"
0 0 28 3 1 #"("
0 0 14 3 19 #"$Vector_Dot_Product"
0 0 28 29 1 #"\n"
0 0 28 3 29 #"                             "
0 0 14 3 11 #"vector_br_p"
0 0 28 29 1 #"\n"
0 0 28 3 29 #"                             "
0 0 14 3 12 #"vector_br_bl"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 18 #"comparison_value_2"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 19 #"$Vector_Dot_Product"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                              "
0 0 14 3 11 #"vector_br_p"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                              "
0 0 14 3 12 #"vector_br_tr"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 47 #";If this is true, then the point must be inside"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 15 #";the rectangle."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 3 #"and"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 14 3 18 #"comparison_value_1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 18 #"comparison_value_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 19 #"$Vector_Dot_Product"
0 0 28 3 1 #" "
0 0 14 3 12 #"vector_br_bl"
0 0 28 3 1 #" "
0 0 14 3 12 #"vector_br_bl"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 14 3 18 #"comparison_value_2"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 18 #"comparison_value_2"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 19 #"$Vector_Dot_Product"
0 0 28 3 1 #" "
0 0 14 3 12 #"vector_br_tr"
0 0 28 3 1 #" "
0 0 14 3 12 #"vector_br_tr"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 58
#";Returns the distance between an infinite line and a point"
0 0 28 29 1 #"\n"
0 0 18 3 64
#";given the comparision point and 2 different points on the line."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Distance_Line_Point"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 14 3 10 #"main_point"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 14 3 12 #"line_point_1"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 14 3 12 #"line_point_2"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 18 3 33 #";Extracting the necessary values."
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 3 #"x_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 14 3 12 #"line_point_1"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 3 #"y_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 14 3 12 #"line_point_1"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 3 #"x_2"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 14 3 12 #"line_point_2"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 3 #"y_2"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 14 3 12 #"line_point_2"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 6 #"x_main"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 14 3 10 #"main_point"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 6 #"y_main"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 14 3 10 #"main_point"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 7 #"delta_x"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 28 3 1 #" "
0 0 14 3 3 #"x_1"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 7 #"delta_y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 14 3 3 #"y_2"
0 0 28 3 1 #" "
0 0 14 3 3 #"y_1"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 39 #";Equation for calculating the distance."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 1 #"/"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"abs"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"+"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"("
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 14 3 7 #"delta_y"
0 0 28 3 1 #" "
0 0 14 3 6 #"x_main"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"("
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 24 3 2 #"-1"
0 0 28 3 1 #" "
0 0 14 3 7 #"delta_x"
0 0 28 3 1 #" "
0 0 14 3 6 #"y_main"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"("
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 14 3 3 #"x_2"
0 0 28 3 1 #" "
0 0 14 3 3 #"y_1"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"("
0 0 14 3 1 #"*"
0 0 28 3 1 #" "
0 0 24 3 2 #"-1"
0 0 28 3 1 #" "
0 0 14 3 3 #"y_2"
0 0 28 3 1 #" "
0 0 14 3 3 #"x_1"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"       "
0 0 28 3 1 #"("
0 0 14 3 4 #"sqrt"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"+"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"("
0 0 14 3 3 #"sqr"
0 0 28 3 1 #" "
0 0 14 3 7 #"delta_y"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"("
0 0 14 3 3 #"sqr"
0 0 28 3 1 #" "
0 0 14 3 7 #"delta_x"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 55 #";Finds the distance between a NON-infinite line-segment"
0 0 28 29 1 #"\n"
0 0 18 3 54 #";and a point, given that point and the 2 end points of"
0 0 28 29 1 #"\n"
0 0 18 3 10 #";the line."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 28 #"$Distance_Line_Segment_Point"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 10 #"main_point"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 16 #"start_point_line"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 14 #"end_point_line"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 18 3 47 #";Calculating the necessary vectors/projections."
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 4 #"line"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Create"
0 0 28 3 1 #" "
0 0 14 3 16 #"start_point_line"
0 0 28 3 1 #" "
0 0 14 3 14 #"end_point_line"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 17 #"vector_start_main"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Create"
0 0 28 3 1 #" "
0 0 14 3 16 #"start_point_line"
0 0 28 3 1 #" "
0 0 14 3 10 #"main_point"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 21 #"main_point_projection"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Vector_Projection"
0 0 28 3 1 #" "
0 0 14 3 17 #"vector_start_main"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                              "
0 0 14 3 4 #"line"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 45 #";If the angle between the line and the vector"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 42 #";from the start point to the main point is"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 38 #";>90 degrees <=> dot-product < 0, then"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 38 #";the closest point is the start point."
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 19 #"$Vector_Dot_Product"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 14 3 17 #"vector_start_main"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 14 3 4 #"line"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"       "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Length"
0 0 28 3 1 #" "
0 0 14 3 17 #"vector_start_main"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 37 #";If the projection is longer than the"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 35 #";line segment, the end point is the"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 15 #";closest point."
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 1 #">"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Length"
0 0 28 3 1 #" "
0 0 14 3 21 #"main_point_projection"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Length"
0 0 28 3 1 #" "
0 0 14 3 4 #"line"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"       "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Length"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Create"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                        "
0 0 14 3 14 #"end_point_line"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                        "
0 0 14 3 10 #"main_point"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 37 #";Otherwise, we can just calculate the"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 36 #";perpendicular distance to the line."
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Distance_Line_Point"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 14 3 10 #"main_point"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 14 3 16 #"start_point_line"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 14 3 14 #"end_point_line"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 49 #";-------------Single unit collisions-------------"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 2 #"#|"
0 0 18 29 1 #"\n"
0 0 18 3 48 #"Here the 4 collision-decector types are defined:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 26 #"1. circle-circle collision"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"2. rectangle-rectangle collision"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"3. rectangle-circle collision"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 29 #"4. The 3 above joined into 1."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 42 #"------------------------------------------"
0 0 18 3 8 #"--------"
0 0 18 29 1 #"\n"
0 0 18 3 14 #"How they work:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 62
#"1. circle-circle: If the distance between them is smaller than"
0 0 18 29 1 #"\n"
0 0 18 3 41 #"  their added radii, a collision occured."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 50 #"--------------------------------------------------"
0 0 18 29 1 #"\n"
0 0 18 3 65
#"2. rectangle-rectangle: Uses SAT(separating axes theorem) to find"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"if a collision har occured:"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 58
#"    A. Find the perpendicular axes to 1 of the rectangles."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 75
(
 #"    B. Project all corners from both rectangles on the axes, one at "
 #"a time."
) 0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 78
(
 #"    C. Take the dot product between the projections and the projecti"
 #"on axis to"
) 0 0 18 29 1 #"\n"
0 0 18 3 2 #"  "
0 0 18 3 73
(
 #"    find which projection goes furthest and shortest for both rectan"
 #"gles."
) 0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 54 #"    D. Compare these values, collision has occured if:"
0 0 18 29 1 #"\n"
0 0 18 3 41 #"      min(rectangle b) < max(rectangle a)"
0 0 18 29 1 #"\n"
0 0 18 3 41 #"      min(rectangle a) < max(rectangle b)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 83
(
 #"    E. Repeat for the second axis. Collision has occured if both axi"
 #"s returns true."
) 0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 80
(
 #"    NOTE: If one axes shows no collision, that is enough to fully de"
 #"cide that no"
) 0 0 18 29 1 #"\n"
0 0 18 3 71
(
 #"     collision has occured, and the procedure won't check the next o"
 #"ne."
) 0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"--------------------------------------------"
0 0 18 3 6 #"------"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"3."
0 0 18 29 1 #"\n"
0 0 18 3 66
#"    A. Checks if the center of the circle is inside the rectangle."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 57 #"    B. Checks if shortest distance to any of the edges is"
0 0 18 29 1 #"\n"
0 0 18 3 44 #"      smaller than the radius of the circle."
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 52 #"__________________________________________________|#"
0 0 28 29 1 #"\n"
0 0 18 3 3 #";1."
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 42 #";Returns #t if 2 circles overlap. else #f."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Circle_Collision?"
0 0 28 3 1 #" "
0 0 14 3 8 #"circle_1"
0 0 28 3 1 #" "
0 0 14 3 8 #"circle_2"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 8 #"distance"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Length"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 14 #"$Vector_Create"
0 0 28 29 1 #"\n"
0 0 28 3 35 #"                                   "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 8 #"circle_1"
0 0 28 3 1 #" "
0 0 14 3 22 #"$Get_Center_Of_Gravity"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 35 #"                                   "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 8 #"circle_2"
0 0 28 3 1 #" "
0 0 14 3 22 #"$Get_Center_Of_Gravity"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 8 #"distance"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 8 #"circle_1"
0 0 28 3 1 #" "
0 0 14 3 11 #"$Get_Radius"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                   "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 8 #"circle_2"
0 0 28 3 1 #" "
0 0 14 3 11 #"$Get_Radius"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 3 #";2."
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 45 #";Returns #t if 2 rectangles overlap, else #f."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 21 #"$Rectangle_Collision?"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 11 #"rectangle_a"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 11 #"rectangle_b"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 24 #"perpendicular_axes_obj_a"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 24 #"$Find_Perpendicular_Axes"
0 0 28 3 1 #" "
0 0 14 3 11 #"rectangle_a"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 59
#";Checks if their projections on the perpendicular axes to 1"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 27 #";of the rectangles overlap."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 3 #"and"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Projection_Overlap?"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 14 3 24 #"perpendicular_axes_obj_a"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 14 3 11 #"rectangle_a"
0 0 28 3 1 #" "
0 0 14 3 11 #"rectangle_b"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Projection_Overlap?"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 14 3 24 #"perpendicular_axes_obj_a"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 14 3 11 #"rectangle_a"
0 0 28 3 1 #" "
0 0 14 3 11 #"rectangle_b"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 3 #";3."
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 57 #";Returns #t if 2 a rectangle and circle overlap, else #f."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 28 #"$Rectangle_Circle_Collision?"
0 0 28 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 28 3 1 #" "
0 0 14 3 6 #"circle"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 18 3 33 #";Extracting the necessary values."
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 13 #"circle_center"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 6 #"circle"
0 0 28 3 1 #" "
0 0 14 3 22 #"$Get_Center_Of_Gravity"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"circle_radius"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 6 #"circle"
0 0 28 3 1 #" "
0 0 14 3 11 #"$Get_Radius"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"rec_br_corner"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Br_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"rec_bl_corner"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Bl_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"rec_tr_corner"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tr_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 13 #"rec_tl_corner"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 9 #"rectangle"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tl_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 38 #";Checks if the circle center is inside"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 15 #";the rectangle."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 2 #"or"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Point_In_Rectangle?"
0 0 28 3 1 #" "
0 0 14 3 13 #"circle_center"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                              "
0 0 14 3 13 #"rec_br_corner"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                              "
0 0 14 3 13 #"rec_bl_corner"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                              "
0 0 14 3 13 #"rec_tr_corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 55 #";The list of distances is searched. If some distance is"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 57 #";shorter than the circle radius, a collision has occured."
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"("
0 0 14 3 3 #"not"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 6 #"filter"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 8 #"distance"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                              "
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 8 #"distance"
0 0 28 3 1 #" "
0 0 14 3 13 #"circle_radius"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 18 3 36 #";Returns a list of shorest distances"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 18 3 30 #";from every edge to the point."
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 28 #"                            "
0 0 28 3 1 #"("
0 0 14 3 3 #"map"
0 0 28 29 1 #"\n"
0 0 28 3 29 #"                             "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 11 #"corner_pair"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 31 #"                               "
0 0 28 3 1 #"("
0 0 14 3 28 #"$Distance_Line_Segment_Point"
0 0 28 29 1 #"\n"
0 0 28 3 32 #"                                "
0 0 14 3 13 #"circle_center"
0 0 28 29 1 #"\n"
0 0 28 3 32 #"                                "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 11 #"corner_pair"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 32 #"                                "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 11 #"corner_pair"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 29 #"                             "
0 0 28 29 1 #"\n"
0 0 28 3 29 #"                             "
0 0 18 3 40 #";list of all the edges start/end points."
0 0 28 29 1 #"\n"
0 0 28 3 29 #"                             "
0 0 28 3 1 #"("
0 0 14 3 4 #"list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 13 #"rec_bl_corner"
0 0 28 3 1 #" "
0 0 14 3 13 #"rec_br_corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 35 #"                                   "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 13 #"rec_bl_corner"
0 0 28 3 1 #" "
0 0 14 3 13 #"rec_tl_corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 35 #"                                   "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 13 #"rec_tl_corner"
0 0 28 3 1 #" "
0 0 14 3 13 #"rec_tr_corner"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 35 #"                                   "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 13 #"rec_bl_corner"
0 0 28 3 1 #" "
0 0 14 3 13 #"rec_tl_corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 3 #";4."
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 56 #";Takes 2 objects and returns #t if they collide, else #f"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 11 #"$Collision?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_1"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_2"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 3 #"and"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_1"
0 0 28 3 1 #" "
0 0 14 3 10 #"rectangle%"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_2"
0 0 28 3 1 #" "
0 0 14 3 10 #"rectangle%"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"     "
0 0 28 3 1 #"("
0 0 14 3 21 #"$Rectangle_Collision?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_1"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_2"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 3 #"and"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_1"
0 0 28 3 1 #" "
0 0 14 3 7 #"circle%"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_2"
0 0 28 3 1 #" "
0 0 14 3 7 #"circle%"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 5 #"     "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Circle_Collision?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_1"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_2"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_1"
0 0 28 3 1 #" "
0 0 14 3 10 #"rectangle%"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 28 #"$Rectangle_Circle_Collision?"
0 0 28 29 1 #"\n"
0 0 28 3 34 #"                                  "
0 0 14 3 8 #"object_1"
0 0 28 29 1 #"\n"
0 0 28 3 34 #"                                  "
0 0 14 3 8 #"object_2"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 28 #"$Rectangle_Circle_Collision?"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_2"
0 0 28 3 1 #" "
0 0 14 3 8 #"object_1"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";----------------World Collision------------------"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 31 #";Here, the procedures needed to"
0 0 28 29 1 #"\n"
0 0 18 3 36 #";detect world collision are defined."
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 60
#";Takes a flying unit and returns if it is colliding with the"
0 0 28 29 1 #"\n"
0 0 18 3 65
#";world, and how it collides(sky, ground, left, right) if it does."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 21 #"$Find_World_Collision"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"["
0 0 14 3 11 #"world_width"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 7 #"*world*"
0 0 28 3 1 #" "
0 0 14 3 10 #"$Get_Width"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"["
0 0 14 3 12 #"world_height"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 7 #"*world*"
0 0 28 3 1 #" "
0 0 14 3 11 #"$Get_Height"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 26 #";If its a rectangular unit"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 10 #"rectangle%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 20 #"corner_x_coordinates"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"sort"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"list"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 6 #"$Get_P"
0 0 14 3 2 #"ro"
0 0 14 3 1 #"j"
0 0 14 3 1 #"e"
0 0 14 3 14 #"cted_Bl_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Br_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tl_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 24 #"                       ("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tr_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 22 #"                      "
0 0 14 3 1 #"<"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 20 #"corner_y_coordinates"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"sort"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"list"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Bl_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Br_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tl_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Projected_Tr_Corner"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 22 #"                      "
0 0 14 3 1 #"<"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 3 #"   "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 8 #"lowest_x"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 20 #"corner_x_coordinates"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 8 #"lowest_y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 20 #"corner_y_coordinates"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 9 #"highest_x"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Last_Element_List"
0 0 28 3 1 #" "
0 0 14 3 20 #"corner_x_coordinates"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 9 #"highest_y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 18 #"$Last_Element_List"
0 0 28 3 1 #" "
0 0 14 3 20 #"corner_y_coordinates"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"   "
0 0 28 3 7 #"       "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 49 #";The values are compared and a tag containing the"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 34 #";occured collision is returned(see"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 56 #";$World_Collision_Comparison for the name of the tags). "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 27 #"$World_Collision_Comparison"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 14 3 8 #"lowest_x"
0 0 28 3 1 #" "
0 0 14 3 8 #"lowest_y"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 14 3 9 #"highest_x"
0 0 28 3 1 #" "
0 0 14 3 9 #"highest_y"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 14 3 12 #"world_height"
0 0 28 3 1 #" "
0 0 14 3 11 #"world_width"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 42 #";-----------------------------------------"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 53 #";If not rectangular, it is guaranteed to be circular."
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 6 #"radius"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 11 #"$Get_Radius"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 6 #"center"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 22 #"$Get_Center_Of_Gravity"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 8 #"lowest_x"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 14 3 6 #"center"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 14 3 6 #"radius"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 8 #"lowest_y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 14 3 6 #"center"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 14 3 6 #"radius"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 9 #"highest_x"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 14 3 6 #"center"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 14 3 6 #"radius"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 9 #"highest_y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 14 3 6 #"center"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 14 3 6 #"radius"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 49 #";The values are compared and a tag containing the"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 34 #";occured collision is returned(see"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 55 #";$World_Collision_Comparison for the name of the tags)."
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 27 #"$World_Collision_Comparison"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 14 3 8 #"lowest_x"
0 0 28 3 1 #" "
0 0 14 3 8 #"lowest_y"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 14 3 9 #"highest_x"
0 0 28 3 1 #" "
0 0 14 3 9 #"highest_y"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 14 3 12 #"world_height"
0 0 28 3 1 #" "
0 0 14 3 11 #"world_width"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 53 #";A help procedure to $Find_World_Collision that takes"
0 0 28 29 1 #"\n"
0 0 18 3 47 #";the values of a flying unit and info about the"
0 0 28 29 1 #"\n"
0 0 18 3 53 #";world and returns what type of collision has occured"
0 0 28 29 1 #"\n"
0 0 18 3 24 #";with the world, if any."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 27 #"$World_Collision_Comparison"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 12 #"obj_lowest_x"
0 0 28 3 1 #" "
0 0 14 3 12 #"obj_lowest_y"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 13 #"obj_highest_x"
0 0 28 3 1 #" "
0 0 14 3 13 #"obj_highest_y"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 12 #"world_height"
0 0 28 3 1 #" "
0 0 14 3 11 #"world_width"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 37 #";Returns the collision type as a tag."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 12 #"obj_lowest_y"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 16 #"ground_collision"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 12 #"world_height"
0 0 28 3 1 #" "
0 0 14 3 12 #"obj_lowest_y"
0 0 28 3 1 #" "
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 13 #"sky_collision"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 13 #"obj_highest_x"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 14 #"left_collision"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 1 #"<"
0 0 28 3 1 #" "
0 0 14 3 11 #"world_width"
0 0 28 3 1 #" "
0 0 14 3 12 #"obj_lowest_x"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 15 #"right_collision"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 12 #"no_collision"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";--Help procedures for multiple unit collisions---"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 58
#";Here, the procedures which help handle multiple collsions"
0 0 28 29 1 #"\n"
0 0 18 3 55 #";are defined. This includes taking all units in *world*"
0 0 28 29 1 #"\n"
0 0 18 3 52 #";and checking what they have collided with, but also"
0 0 28 29 1 #"\n"
0 0 18 3 45 #";prioritizing which collision takes priority."
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";Sorts a list of flying units ordered by collision"
0 0 28 29 1 #"\n"
0 0 18 3 28 #";priority. Is returned like:"
0 0 28 29 1 #"\n"
0 0 18 3 43 #";(append planes entities projectiles buffs)"
0 0 28 29 1 #"\n"
0 0 18 3 30 #";,which is the priority order."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 16 #"$Sort_Unit_Types"
0 0 28 3 1 #" "
0 0 14 3 20 #"list_of_flying_units"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 6 #"planes"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 8 #"entities"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 11 #"projectiles"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 5 #"buffs"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 18 3 27 #";Identifies the object type"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 9 #"airplane%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 6 #"planes"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 6 #"planes"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 14 #"flying_entity%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 8 #"entities"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 8 #"entities"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 11 #"projectile%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 11 #"projectiles"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 11 #"projectiles"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 18 3 41 #";If none of the above, only buff% remains"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 5 #"buffs"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 5 #"buffs"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 20 #"list_of_flying_units"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 38 #";returned list with the objects in the"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 15 #";correct order."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 6 #"append"
0 0 28 3 1 #" "
0 0 14 3 6 #"planes"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 14 3 8 #"entities"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 14 3 11 #"projectiles"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 14 3 5 #"buffs"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 60
#";Takes a list of flying units and returns 2 lists. The first"
0 0 28 29 1 #"\n"
0 0 18 3 60
#";is a list of all objects that have collided with the world,"
0 0 28 29 1 #"\n"
0 0 18 3 39 #";and the second one those that haven't."
0 0 28 29 1 #"\n"
0 0 18 3 65
#";Returned as: (cons world_collision_list no_world_collision_list)"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 26 #"$Separate_World_Collisions"
0 0 28 3 1 #" "
0 0 14 3 20 #"list_of_flying_units"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 19 #"no_world_collisions"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 46 #";Tags every flying unit with a world collision"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 37 #";type, see $World_Collision for list."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 21 #"world_collision_types"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 39 #"                                       "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 29 1 #"\n"
0 0 28 3 40 #"                                        "
0 0 14 3 11 #"flying_unit"
0 0 28 29 1 #"\n"
0 0 28 3 40 #"                                        "
0 0 28 3 1 #"("
0 0 14 3 21 #"$Find_World_Collision"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 37 #"                                     "
0 0 14 3 20 #"list_of_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 3 #"   "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 43 #";Spliting collision and no collision into 2"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 16 #";separate lists."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 22 #"world_flying_collision"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 11 #"           "
0 0 28 3 1 #"("
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 22 #"world_flying_collision"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 28 29 1 #"\n"
0 0 28 3 23 #"                       "
0 0 24 3 1 #"'"
0 0 14 3 12 #"no_collision"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 19 #"no_world_collisions"
0 0 28 29 1 #"\n"
0 0 28 3 21 #"                     "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 22 #"world_flying_collision"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 27 #"                           "
0 0 14 3 19 #"no_world_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 22 #"world_flying_collision"
0 0 28 29 1 #"\n"
0 0 28 3 44 #"                                            "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 14 3 21 #"world_collision_types"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 31 #";Returns the 2 lists as a pair."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 14 3 19 #"no_world_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 67
#";Takes a flying unit and a list of flying units sorted by priotity,"
0 0 28 29 1 #"\n"
0 0 18 3 65
#";and returns either the tag 'no_collision, or if it has collided,"
0 0 28 29 1 #"\n"
0 0 18 3 66
#";returns the flying unit which had the highest collision priority."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Collision_Detection"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 29 1 #"\n"
0 0 28 3 30 #"                              "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"loop"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 12 #"no_collision"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 11 #"$Collision?"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"       "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"("
0 0 14 3 4 #"loop"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 14 3 4 #"loop"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 51 #";Takes a list of units and removes them from world,"
0 0 28 29 1 #"\n"
0 0 18 3 31 #";and runs their kill procedure."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 9 #"$Kill_All"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 7 #"*world*"
0 0 28 3 1 #" "
0 0 14 3 19 #"$Delete_Flying_Unit"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 7 #"*world*"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"         ("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 5 #"$Kill"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 2 #" ("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 14 #"*flying_units*"
0 0 28 3 1 #" "
0 0 14 3 6 #"get-dc"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 14 3 11 #"draw-bitmap"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"               ("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 24 #"$Get_Kill_Bitmap_Cooldow"
0 0 14 3 1 #"n"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_X"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 22 #"$Get_Center_Of_Gravity"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Vector_Get_Y"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 22 #"$Get_Center_Of_Gravity"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 7 #"       "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 45 #";Takes a list of planes and teleports them to"
0 0 28 29 1 #"\n"
0 0 18 3 24 #";the right or left side."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Teleport_All"
0 0 28 3 1 #" "
0 0 14 3 9 #"direction"
0 0 28 3 1 #" "
0 0 14 3 13 #"teleport_list"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 3 1 #"["
0 0 14 3 11 #"world_width"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 7 #"*world*"
0 0 28 3 1 #" "
0 0 14 3 10 #"$Get_Width"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 9 #"direction"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"left"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 13 #";to the left."
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"plane"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Increase_Pos"
0 0 28 3 1 #" "
0 0 14 3 5 #"plane"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"-"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 11 #"world_width"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 5 #"plane"
0 0 28 3 1 #" "
0 0 14 3 10 #"$Get_Width"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 19 #"$Rotate_All_Corners"
0 0 28 3 1 #" "
0 0 14 3 5 #"plane"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 14 3 13 #"teleport_list"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 18 3 14 #";to the right."
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"("
0 0 14 3 3 #"map"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 16 3 6 #"lambda"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"plane"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Increase_Pos"
0 0 28 3 1 #" "
0 0 14 3 5 #"plane"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 1 #"+"
0 0 28 3 1 #" "
0 0 14 3 11 #"world_width"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 5 #"plane"
0 0 28 3 1 #" "
0 0 14 3 10 #"$Get_Width"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #" "
0 0 24 3 1 #"0"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 19 #"$Rotate_All_Corners"
0 0 28 3 1 #" "
0 0 14 3 5 #"plane"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 14 3 13 #"teleport_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";-------------Main Collision Finder---------------"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 54 #";Finds all the collisions that has occured in *world*."
0 0 28 29 1 #"\n"
0 0 18 3 60
#";is returned like 2 lists separated world-unit collision and"
0 0 28 29 1 #"\n"
0 0 18 3 26 #";unit-unit collision like:"
0 0 28 29 1 #"\n"
0 0 18 3 48 #";(cons world_collisions list_of_unit_collisions)"
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 16 #"$Find_Collisions"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 12 #"flying_units"
0 0 28 3 2 #" ("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 7 #"*world*"
0 0 28 3 1 #" "
0 0 14 3 17 #"$Get_Flying_Units"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 55 #";First, world collisions are taken care of, which takes"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 45 #";priority over the other types of collisions."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 21 #"world_collision_lists"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 26 #"$Separate_World_Collisions"
0 0 28 3 1 #" "
0 0 14 3 12 #"flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 21 #"world_collision_lists"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 19 #"no_world_collisions"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 21 #"world_collision_lists"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 52 #";The flying units that didn't collide with the world"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 59
#";are sorted in the order of priority(if multiple collisions"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 26 #";occur, 1 is prioritized)."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 16 #"$Sort_Unit_Types"
0 0 28 3 1 #" "
0 0 14 3 19 #"no_world_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 52 #";A list which containts pairs of all units that have"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 30 #";a detected collison together."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 23 #"list_of_unit_collisions"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"loop"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"("
0 0 16 3 4 #"when"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"not"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 13 #"rest_of_units"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 13 #"collision_tag"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 20 #"$Collision_Detection"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 29 1 #"\n"
0 0 28 3 51 #"                                                   "
0 0 14 3 13 #"rest_of_units"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 16 3 4 #"when"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"not"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 13 #"collision_tag"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 12 #"no_collision"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 23 #"list_of_unit_collisions"
0 0 28 29 1 #"\n"
0 0 28 3 18 #"                  "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                   "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 13 #"collision_tag"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 19 #"                   "
0 0 14 3 23 #"list_of_unit_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 19 #"sorted_flying_units"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 4 #"loop"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 4 #"loop"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 2 #"#|"
0 0 18 29 1 #"\n"
0 0 18 3 72
(
 #"          ;After all the flying remaining flying units have been tag"
 #"ged,"
) 0 0 18 29 1 #"\n"
0 0 18 3 61
#"          ;Those that have the tag 'no_collision are removed."
0 0 18 29 1 #"\n"
0 0 18 3 49 #"          (filter (lambda (flying_unit_collision)"
0 0 18 29 1 #"\n"
0 0 18 3 77
(
 #"                    (not (equal? (cdr flying_unit_collision) 'no_col"
 #"lision)))"
) 0 0 18 29 1 #"\n"
0 0 18 3 9 #"         "
0 0 18 3 9 #"         "
0 0 18 29 1 #"\n"
0 0 18 3 78
(
 #"                  ;All flying units that didn't collide with the wor"
 #"ld are run"
) 0 0 18 29 1 #"\n"
0 0 18 3 59
#"                  ;through 1 by 1 in the order of priority."
0 0 18 29 1 #"\n"
0 0 18 3 44 #"                  (map (lambda (flying_unit)"
0 0 18 29 1 #"\n"
0 0 18 29 1 #"\n"
0 0 18 3 80
(
 #"                         ;The flying unit is tagged with either 'no_"
 #"collision or"
) 0 0 18 29 1 #"\n"
0 0 18 3 83
(
 #"                         ;The unit with the highest priority that it"
 #" collided with."
) 0 0 18 29 1 #"\n"
0 0 18 3 42 #"                         (cons flying_unit"
0 0 18 29 1 #"\n"
0 0 18 3 64
#"                               ($Collision_Detection flying_unit"
0 0 18 29 1 #"\n"
0 0 18 3 32 #"                                "
0 0 18 3 49 #"                     (cdr sorted_flying_units))))"
0 0 18 29 1 #"\n"
0 0 18 3 46 #"                       sorted_flying_units))])"
0 0 18 29 1 #"\n"
0 0 18 3 2 #"|#"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 62
#";Finally, the 2 lists containing the collisions with the world"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 43 #";and the units which collided are returned."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #" "
0 0 14 3 23 #"list_of_unit_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";-------------Main Collision Handler--------------"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 18 3 50 #";_________________________________________________"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 18 3 44 #";Finds all occuring collisions in the world,"
0 0 28 29 1 #"\n"
0 0 18 3 37 #";and takes the corresponding actions."
0 0 28 29 1 #"\n"
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 11 #"$Collisions"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 2 #"  "
0 0 28 3 1 #"("
0 0 16 3 4 #"let*"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 44 #";All collisions are found and separated into"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 23 #";world/unit collisions."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 10 #"collisions"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 16 #"$Find_Collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"car"
0 0 28 3 1 #" "
0 0 14 3 10 #"collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 22 #"flying_unit_collisions"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 10 #"collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"("
0 0 14 3 7 #"display"
0 0 28 3 1 #" "
0 0 14 3 22 #"flying_unit_collisions"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 44 #";Lists are created which will be filled with"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 18 3 42 #";the units that will be teleported/killed."
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 23 #"teleport_too_right_list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 9 #"         "
0 0 28 3 1 #"["
0 0 14 3 22 #"teleport_too_left_list"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 28 3 1 #"("
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 33 #";A loop for the world collisions."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 10 #"loop_world"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 41 #";If no world collisions left, continue to"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 17 #";unit collisions."
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"("
0 0 14 3 2 #"if"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 10 #"loop_units"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"["
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"caar"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"["
0 0 14 3 13 #"collision_tag"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cdar"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 18 3 48 #";If a non airplane unit collides with the world,"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 18 3 20 #";it will be removed."
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 3 #"not"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 9 #"airplane%"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 18 3 37 #";Else, take the corresponding action."
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 13 #"collision_tag"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 16 #"ground_collision"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 29 1 #"\n"
0 0 28 3 21 #"                     "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 13 #"collision_tag"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 13 #"sky_collision"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 9 #"$Stalling"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 13 #"collision_tag"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 14 #"left_collision"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 23 #"teleport_too_right_list"
0 0 28 29 1 #"\n"
0 0 28 3 21 #"                     "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 23 #"teleport_too_right_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 28 3 1 #" "
0 0 14 3 13 #"collision_tag"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 15 #"right_collision"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 22 #"teleport_too_left_list"
0 0 28 29 1 #"\n"
0 0 28 3 21 #"                     "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 11 #"flying_unit"
0 0 28 3 1 #" "
0 0 14 3 22 #"teleport_too_left_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 31 #";Loop until no collisions left."
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 16 #"world_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"("
0 0 14 3 10 #"loop_world"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 32 #";A loop for the unit collisions."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 16 3 6 #"define"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 10 #"loop_units"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 18 3 35 #";Continue until no collisions left."
0 0 28 29 1 #"\n"
0 0 28 3 6 #"      "
0 0 28 3 1 #"("
0 0 16 3 4 #"when"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"not"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 5 #"null?"
0 0 28 3 1 #" "
0 0 14 3 22 #"flying_unit_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 29 1 #"\n"
0 0 28 3 8 #"        "
0 0 28 3 1 #"("
0 0 16 3 3 #"let"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 18 3 48 #";Separate the units that will be compared first."
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"["
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"caar"
0 0 28 3 1 #" "
0 0 14 3 22 #"flying_unit_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 14 #"              "
0 0 28 3 1 #"["
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cdar"
0 0 28 3 1 #" "
0 0 14 3 22 #"flying_unit_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 45 #";Detect unit type to take the correct action."
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 38 #";-------------------------------------"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 13 #";unit_1 plane"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 14 3 9 #"airplane%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 12 #";unit_2 buff"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 5 #"buff%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 14 3 5 #"$Buff"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 14 #"$Get_Buff_Type"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 52 #";if not a buff, all other cases means both the plane"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 37 #";and the other unit should be killed."
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 29 1 #"\n"
0 0 28 3 27 #"                           "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 38 #";-------------------------------------"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 14 #";unit_1 entity"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 14 3 14 #"flying_entity%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 13 #";unit_2 plane"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"airplane%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 14 #";unit_2 entity"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 14 #"flying_entity%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 18 #";unit_2 projectile"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 11 #"projectile%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 6 #"printf"
0 0 28 3 1 #" "
0 0 20 3 32 #"\"To implement: spawn buff here!\""
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 12 #";unit_2 buff"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 5 #"buff%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 6 #"printf"
0 0 28 3 1 #" "
0 0 20 3 28 #"\"To implement: buff entity!\""
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 38 #";-------------------------------------"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 18 #";unit_1 projectile"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 14 3 11 #"projectile%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 14 #";unit_2 entity"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 14 #"flying_entity%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 6 #"printf"
0 0 28 3 1 #" "
0 0 20 3 32 #"\"To implement: spawn buff here!\""
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 42 #";if not an entity, all other cases will be"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 19 #";killing both units"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 14 3 4 #"else"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 38 #";-------------------------------------"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 18 3 12 #";unit_1 buff"
0 0 28 29 1 #"\n"
0 0 28 3 12 #"            "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 14 3 5 #"buff%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 13 #"             "
0 0 28 3 1 #"("
0 0 16 3 4 #"cond"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 13 #";unit_2 plane"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"airplane%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 5 #"$Buff"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"send"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 14 3 14 #"$Get_Buff_Type"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 14 #";unit_2 entity"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 14 #"flying_entity%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 6 #"printf"
0 0 28 3 1 #" "
0 0 20 3 28 #"\"To implement: buff entity!\""
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 18 #";unit_2 projectile"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 11 #"projectile%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_1"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 4 #"cons"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 64
#";unit_2 buff       NOTE: (this case doesn't make anyting happen,"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 53 #";since buffs should be able to overlap. Case is added"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 18 3 59
#";for easier overview or later changes. (super-buffs maybe?)"
0 0 28 29 1 #"\n"
0 0 28 3 15 #"               "
0 0 28 3 1 #"["
0 0 28 3 1 #"("
0 0 14 3 5 #"is-a?"
0 0 28 3 1 #" "
0 0 14 3 6 #"unit_2"
0 0 28 3 1 #" "
0 0 14 3 5 #"buff%"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 16 #"                "
0 0 28 3 1 #"("
0 0 14 3 4 #"void"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 3 1 #"]"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 38 #";-------------------------------------"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 18 3 31 #";Finally, repeat for all units."
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 4 #"set!"
0 0 28 3 1 #" "
0 0 14 3 22 #"flying_unit_collisions"
0 0 28 3 1 #" "
0 0 28 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 28 3 1 #" "
0 0 14 3 22 #"flying_unit_collisions"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 10 #"          "
0 0 28 3 1 #"("
0 0 14 3 10 #"loop_units"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 38 #";-------------------------------------"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 61
#";Start the loop, which will run loop_world and loop_units for"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 18 3 11 #";all units."
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 10 #"loop_world"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 5 #"print"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 9 #"$Kill_All"
0 0 28 3 1 #" "
0 0 14 3 9 #"kill_list"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Teleport_All"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"left"
0 0 28 3 1 #" "
0 0 14 3 22 #"teleport_too_left_list"
0 0 28 3 1 #")"
0 0 28 29 1 #"\n"
0 0 28 3 4 #"    "
0 0 28 3 1 #"("
0 0 14 3 13 #"$Teleport_All"
0 0 28 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"right"
0 0 28 3 1 #" "
0 0 14 3 23 #"teleport_too_right_list"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0 0 28 3 1 #")"
0           0
